---
import { Icon } from "astro-icon/components";

import { getCollection } from "astro:content";

const podcast = await getCollection("podcast");
const sortedPodcast = podcast.sort(
  (a, b) => b.data.date.getTime() - a.data.date.getTime()
);

// Mock data for categories (replace with actual data)
const categories = [
  { name: "Dev", count: 76 },
  { name: "Career", count: 43 },
  { name: "AMA", count: 28 },
  { name: "MSS", count: 20 },
  { name: "Books", count: 4 },
];
---

<div
  class="mx-auto w-full max-w-[360px] overflow-hidden rounded-lg bg-[#E2E7EE] p-4 shadow-md"
>
  <div class="pb-4">
    <div class="relative">
      <input
        type="text"
        placeholder="Search episodes"
        class="w-full rounded-full bg-white py-2 pl-10 pr-4 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
      />
      <Icon
        name="search"
        class="absolute left-3 top-2.5 h-5 w-5 text-gray-400"
      />
    </div>

    <div class="mt-4 flex flex-wrap gap-2">
      {
        categories.map(category => (
          <span class="rounded-full bg-white px-3 py-1 text-sm font-medium text-gray-700">
            {category.name}({category.count})
          </span>
        ))
      }
    </div>
  </div>

  <ul class="space-y-2">
    {
      sortedPodcast.map(episode => (
        <a href={`/podcast/${episode.data.episodeSlug}`} class="block">
          <li class="cursor-pointer overflow-hidden rounded-lg bg-white p-4">
            <div class="flex items-center space-x-4">
              <div class="rounded-md border-2 border-black bg-white p-1">
                {episode.data.published ? (
                  <Icon name="play" class="h-4 w-4 text-black" />
                ) : (
                  <Icon name="pause" class="h-4 w-4 text-black" />
                )}
              </div>
              <div class="flex-1">
                <p class="truncate text-lg font-bold text-gray-900">
                  {episode.data.title}
                </p>
                <div class="flex flex-row justify-between text-sm text-gray-500">
                  <p class="text-sm text-gray-500">{episode.data.dateString}</p>
                  <p class="text-sm text-gray-500">{episode.data.duration}</p>
                </div>
              </div>
            </div>
          </li>
        </a>
      ))
    }
  </ul>
</div>
