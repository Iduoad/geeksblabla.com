---
import Datetime from "./datetime.tsx";
import type { CollectionEntry } from "astro:content";
import getReadingTime from "reading-time";
import Layout from "@/components/layout.astro";
import { getEntries, render } from "astro:content";
import Header from "@/components/header.astro";
import ArticleComments from "./article-comments.astro";
import ShareArticle from "./share-article.astro";

export interface Props {
  article: CollectionEntry<"blog">;
}

const { article } = Astro.props;

const { title, description, ogImage, pubDatetime } = article.data;

const minutesRead = getReadingTime(article.body ?? "").text;
const { Content } = await render(article);
const authors = article.data.authors
  ? await getEntries(article.data.authors)
  : undefined;
---

<Layout
  title={title}
  author={authors?.map(author => author.data.name).join(", ")}
  description={description}
  ogImage={ogImage}
>
  <Header />
  <main id="main-content" class="container mx-auto pb-10">
    <div class="mx-auto max-w-3xl border-b border-gray-300 pb-4 pt-10">
      <h1 class="text-heading-sm font-semibold">{title}</h1>
      <p class="text-sm text-gray-500">{minutesRead}</p>
      <div class="my-3 flex flex-row flex-wrap items-end">
        <Datetime datetime={pubDatetime} size="lg" className="mr-2" />
      </div>
      <p class="text-sm text-gray-500">
        by: {authors?.map(author => author.data.name).join(", ")}
      </p>
    </div>

    <article
      id="article"
      role="article"
      class="prose mx-auto mt-8 max-w-3xl prose-pre:border-[1px] prose-pre:border-solid prose-pre:border-gray-300"
    >
      <Content />
    </article>
    <ShareArticle />

    <div class="mx-auto mt-10 w-full max-w-3xl">
      <ArticleComments />
    </div>
  </main>
</Layout>

<style>
  body {
    @apply bg-[#F2F4F7];
  }
</style>
